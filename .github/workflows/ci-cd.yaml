name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      run: docker-compose build

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install dependencies for user-service
      run: |
        cd user-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests for user-service
      run: |
        cd user-service
        python -m unittest discover

    - name: Install dependencies for profile-service
      run: |
        cd profile-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests for profile-service
      run: |
        cd profile-service
        python -m unittest discover

    - name: Install dependencies for messaging-service
      run: |
        cd messaging-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests for messaging-service
      run: |
        cd messaging-service
        python -m unittest discover

    - name: Install dependencies for notification-service
      run: |
        cd notification-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests for notification-service
      run: |
        cd notification-service
        python -m unittest discover

    - name: Install dependencies for task-service
      run: |
        cd task-service
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests for task-service
      run: |
        cd task-service
        python -m unittest discover
    - name: Start SonarQube
      run: |
        docker run -d --name sonarqube -p 9000:9000 sonarqube:latest
      timeout-minutes: 3

   